version: '3'

env:
  PYTHONPATH: lib/python:{{env "PYTHONPATH"}}

vars:
  IMPORT_DIR: '{{.HOME}}/Library/Mobile Documents/iCloud~is~workflow~my~workflows/Documents'
  SHORTCUT_PATHS:
    sh: shortcuts run 'List Shortcuts'

includes:
  import: ./import.yaml

tasks:
  all:
    desc: Exports all Apple Shortcuts from `{{.SOURCE_DIR}}` into your iCloud account.
    deps:
    - for: { var: SHORTCUT_PATHS, split: "\n", as: SHORTCUT_PATH }
      task: default
      vars: &pass-sc-path
        SHORTCUT_PATH: '{{.SHORTCUT_PATH}}'

  default:
    desc: Exports a single Apple Shortcut from `{{.SOURCE_DIR}}` into your iCloud account.
    deps: [{task: re-import, vars: *pass-sc-path}]
    requires:
      vars: ["SOURCE_DIR", "BUILD_DIR", "SHORTCUT_PATH"]

  mkdir:
    internal: true
    requires:
      vars: ["BUILD_DIR", "SHORTCUT_PATH"]
    cmds:
    - { silent: true, cmd: 'mkdir -p {{q .BUILD_DIR}}/{{q (dir .SHORTCUT_PATH)}}' }

  compile:
    label: &label-by-path '{{.TASK}}-{{.SHORTCUT_PATH}}'
    internal: true
    deps:
    - { vars: *pass-sc-path, task: mkdir }
    vars: &src-vars
      JSONNET: '{{.SOURCE_DIR}}/{{.SHORTCUT_PATH}}.jsonnet'
      JSON_IN: '{{.BUILD_DIR}}/{{.SHORTCUT_PATH}}-in.json'
      JSON_OUT: '{{.BUILD_DIR}}/{{.SHORTCUT_PATH}}-out.json'
      UNSIGNED: '{{.BUILD_DIR}}/{{.SHORTCUT_PATH}}.wflow'
      SIGNED: '{{.BUILD_DIR}}/{{.SHORTCUT_PATH}}.shortcut'
    sources:
    - lib/python/jsonnet_render.py
    - lib/python/jsonnet_methods.py
    - lib/jsonnet/shortcuts.libsonnet
    - { ref: .JSONNET }
    generates:
    - { ref: .JSON_OUT }
    interactive: true # to work around weird KeyboardInterrupt?
    cmds:
    - .venv/bin/python lib/python/jsonnet_render.py {{q .JSONNET}} > {{q .JSON_OUT}}

  convert:
    label: *label-by-path
    internal: true
    vars: *src-vars
    deps:
    - { vars: *pass-sc-path, task: compile }
    sources:
    - { ref: .JSON_OUT }
    generates:
    - { ref: .UNSIGNED }
    cmds:
    - plutil -convert xml1 {{q .JSON_OUT}} -o {{q .UNSIGNED}}

  sign:
    label: *label-by-path
    internal: true
    vars: *src-vars
    deps:
    - { vars: *pass-sc-path, task: convert }
    sources:
    - { ref: .UNSIGNED }
    generates:
    - { ref: .SIGNED }
    cmds:
    - shortcuts sign -i {{q .UNSIGNED}} -o {{q .SIGNED}}

  re-import:
    label: *label-by-path
    internal: true
    vars: *src-vars
    deps:
    - { vars: *pass-sc-path, task: sign }
    - { vars: *pass-sc-path, task: 'import:extract' } # fresh import for status check
    status:
    - echo foo >&2
    - .venv/bin/python lib/python/validate_json_output_matches_input.py {{q .JSON_IN}} {{q .JSON_OUT}}


    cmds:
    - open -W {{q .SIGNED}}
