id: string-interps
language: jsonnet

rule:
  kind: object
  pattern: $X

rewriters:

- id: &1 val-string-lit
  rule:
    pattern: >-
      {
        Value: { string: $STR, },
        WFSerializationType: 'WFTextTokenString',
      }
  fix: >-
    sc.Val($STR)

- id: &2 val-string-solo-var
  rule:
    pattern: >-
      {
        Value: {
          attachmentsByRange: {
            '{0, 1}': function(state) sc.Ref(state, '$NAME'),
          },
          string: 'ï¿¼',
        },
        WFSerializationType: 'WFTextTokenString',
      }
  fix: >-
    function(state) sc.Val('${$NAME}', state)

- id: &3 ref-input
  rule:
    pattern: >-
      {
        Type: 'ExtensionInput',
      }
  fix: >-
    function(state) sc.Ref(state, 'Shortcut Input')

- id: &4 ref-var
  rule:
    pattern: >-
      {
        Type: 'Variable',
        VariableName: '$NAME',
      }
  fix: >-
    function(state) sc.Ref(state, 'Vars.$NAME')

- id: &5 ref-att
  rule:
    pattern: >-
      {
        Value: function(state) sc.Ref($$$ARGS),
        WFSerializationType: 'WFTextTokenAttachment',
      }
  fix: >-
    function(state) sc.Ref($$$ARGS, att=true)

transform:
  X_RE:
    rewrite:
      source: $X
      rewriters:
      - *1
      - *2
      - *3
      - *4
      - *5

fix: >-
  $X_RE
