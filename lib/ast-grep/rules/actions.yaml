id: actions
language: jsonnet

rule:
  pattern: |
    [ $$$ACTIONS ]
  inside:
    kind: field
    has:
      kind: fieldname
      regex: WFWorkflowActions

utils:
  has-custom-output-name:
    has:
      kind: field
      stopBy: end
      has:
        kind: fieldname
        regex: CustomOutputName
        precedes:
          stopBy: { kind: field }
          kind: string
          pattern: $NAME

rewriters:

- id: named-action
  rule: 
    pattern: |
      {
        WFWorkflowActionIdentifier: $ID,
        WFWorkflowActionParameters: $PARAMS,
      }
    matches: has-custom-output-name
  transform:
    PARAMS_NO_OUTPUT_NAME:
      replace:
        source: '$PARAMS'
        replace: '^CustomOutputName: .*,$'
        by: ''
  fix: |
    [$NAME]: lib.Action($ID, $PARAMS_NO_OUTPUT_NAME)

- id: anon-action
  rule: 
    pattern: |
      {
        WFWorkflowActionIdentifier: $ID,
        WFWorkflowActionParameters: $PARAMS,
      }
    not:
      matches: has-custom-output-name
  fix: |
    [lib.anon()]: lib.Action($ID, $PARAMS)

transform:
  ACTIONS_OBJ:
    rewrite:
      rewriters: [named-action, anon-action]
      source: '$$$ACTIONS'

fix: |-
  lib.Actions({
    $ACTIONS_OBJ
  })
